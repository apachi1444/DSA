1

when the client makes a call to the remote object it is received by the stub which
passes this requet to the remote ref layer 

2

when client side RRL receives the request , it invokes a method called invoke() 
of the object remote ref. It passes the request to the RRL on the server side

3

when RRL on the server side passes the request to the skeleton 
( proxy on the server )
which finally invokes the required obj on the server

4

the result is passed all the way to the client

// when we use in the service implementation UniCastRemoteObject

when we create an ojbect of that implemenation it will create automatically the skeleton 
and the skeleton will create a serverSocket to listen to the requests ( a port randomly )

if we want to precise the port we should use in the constructor of 
the implementation the int port !!

Impl(int port ){
	super(port);
}
